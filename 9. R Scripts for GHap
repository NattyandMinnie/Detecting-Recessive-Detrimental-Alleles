NOTE that this script consists of several different scripts ghap1.R to ghap7.R. 
##### RSTUDIO #####
filename: ghap1.R

# Loading packages
library(GHap)
library(tidyverse)
library(qqman)
setwd("~/Masterproject/Collected/Out/")

# Making GHap files from Shapeit phased dataset (.haps and .sample). Converting oxford format files to ghap format (the sample-ids are the same for all chromosomes, so dont need to do all chr. for this)
haps.files = paste("Chr",1:31,".phased",".haps",sep="")
command <- "tail -n+3 Chr1.phased.sample | cut -d' ' -f1,2 > Chr.samples" 
system(command)
for(i in 1:31){
  command <- paste("cat",haps.files[i],"| cut -d' ' -f1-5 >> Chr.markers")
  system(command)
  command <- paste("cat",haps.files[i],"| cut -d' ' -f1-5 --complement >> Chr.phase")
  system(command)
}

# Once the non-binary phase data (phaseb/markers/samples) has been generated Compress phase data using prefix, gives the binary .phaseb files
ghap.compress(input.file = "Chr", out.file = "Chr")


filename: ghap1.R

# Loading packages and set working environment
library(GHap)
library(tidyverse)
library(qqman)
setwd("~/Masterproject/Collected/Out/")

# Load the .phase files into environment
phase <- ghap.loadphase(input.file = "Chr")

# Generate blocks and perform haplotyping
Chr.blocks.150kb <- ghap.blockgen(phase, windowsize = 700, slide = 150, unit = "kbp")
ghap.haplotyping(phase, Chr.blocks.150kb, batchsize = 100, ncores = 8, outfile = "Chr150")
haplo150 <- ghap.loadhaplo(hapsamples.file = "Chr150.hapsamples", hapalleles.file = "Chr150.hapalleles", hapgenotypesb.file = "Chr150.hapgenotypesb")

# Perform haplotype statistics calculations
hapstats150 <- ghap.hapstats(haplo150, ncores = 8)
hapstats150$CHR <- as.numeric(hapstats150$CHR)
hapstats150$Pless <- ppois(q = hapstats150$O.HOM, lambda = hapstats150$E.HOM, lower.tail = TRUE) 
hapstats150$Pexcess <- ppois(q = hapstats150$O.HOM, lambda = hapstats150$E.HOM, lower.tail = FALSE)
hapstats150$P <- hapstats150$Pless / hapstats150$Pexcess

# Create QQ and Manhattan plots
qq(hapstats150$Pless, main = "Homozygote Deficit Deviation of hap150.blocks")
qq(hapstats150$Pexcess, main = "Homozygote Excess Deviation of hap150.blocks") 
manhattan(hapstats150, chr = "CHR", bp = "BP1", p = "P", snp = "BLOCK", logp = TRUE, 
          main = "Manhattanplot of hap150.blocks", suggestiveline = -log10(1e-05), 
          genomewideline = -log10(5e-08), annotateTop = TRUE)

# Subset and annotate data
low_annot150 <- subset(hapstats150, subset = hapstats150$Pless <= (1e-5)) 
high_annot150 <- subset(hapstats150, subset = hapstats150$Pexcess <= (1e-5))
p_annot150 <- subset(hapstats150, subset = hapstats150$P <= (1e-5))
phigh_annot150 <- subset(hapstats150, subset = hapstats150$P <= (0.001))

# Close graphics device
dev.off()


filename: ghap3.R

# Haplotype Statistics with GHap
# Loading packages
library(GHap)
library(tidyverse)
library(qqman)

# Set working directory and load phase files
setwd("~/Masterproject/Collected/Out/")
phase <- ghap.loadphase(input.file = "Chr")

# Generate haplotype blocks with block size of 100kb
Chr.blocks.100kb <- ghap.blockgen(phase, windowsize = 500, slide = 100, unit = "kbp")

# Perform haplotyping and save results
ghap.haplotyping(phase, Chr.blocks.100kb, batchsize = 100, ncores = 8, outfile = "Chr100")
haplo100 <- ghap.loadhaplo(hapsamples.file = "Chr100.hapsamples", hapalleles.file = "Chr100.hapalleles", hapgenotypesb.file = "Chr100.hapgenotypesb")
hapstats100 <- ghap.hapstats(haplo100, ncores = 8)

# Calculate p-values and make QQ and Manhattan plots
as.numeric(hapstats100$CHR) -> hapstats100$CHR
hapstats100$Pless <- ppois(q = hapstats100$O.HOM, lambda = hapstats100$E.HOM, lower.tail = TRUE) 
hapstats100$Pexcess<-ppois(q = hapstats100$O.HOM, lambda = hapstats100$E.HOM, lower.tail = FALSE)
hapstats100$P <- hapstats100$Pless / hapstats100$Pexcess
qq(hapstats100$Pless, main = "Homozygote Deficit Deviation of hap100.blocks")
qq(hapstats100$Pexcess, main = "Homozygote Excess Deviation of hap100.blocks") 
manhattan(hapstats100,chr = "CHR",bp = "BP1",p = "P",snp = "BLOCK", logp = T, main = "Manhattanplot of hap100.blocks", suggestiveline = -log10(1e-05), genomewideline =  -log10(5e-08), annotateTop = T)

# Subset haplotype blocks based on p-values
low_annot100 <- subset(hapstats100, subset = hapstats100$Pless <= (1e-5))
high_annot100 <- subset(hapstats100, subset = hapstats100$Pexcess <= (1e-5))
p_annot100 <- subset(hapstats100, subset = hapstats100$P <= (1e-5))
phigh_annot100 <- subset(hapstats100, subset = hapstats100$P <= (0.001)) 

# Write results to files
write_delim(hapstats100, "hapstats100")
write_delim(low_annot100, "lowannot100")
write_delim(high_annot100, "highannot100")
write_delim(p_annot100, "pannot100")
write_delim(phigh_annot100, "phighannot100")

# Close graphics device
dev.off()


filename: ghap4.R

# Haplotype Statistics with GHap

# Load packages
library(GHap)
library(tidyverse)
library(qqman)

# Set working directory
setwd("~/Masterproject/Collected/Out/")

# Load the .phase files into environment
phase <- ghap.loadphase(input.file = "Chr")

# Generate blocks
Chr.blocks.60kb <- ghap.blockgen(phase, windowsize = 300, slide = 60, unit = "kbp")

# Haplotype analysis
ghap.haplotyping(phase, Chr.blocks.60kb, batchsize = 100, ncores = 8, outfile = "Chr60")
haplo60 <- ghap.loadhaplo(hapsamples.file = "Chr60.hapsamples", hapalleles.file = "Chr60.hapalleles", hapgenotypesb.file = "Chr60.hapgenotypesb")
hapstats60 <- ghap.hapstats(haplo60, ncores = 8)

# Manipulate data
hapstats60$CHR <- as.numeric(hapstats60$CHR)
hapstats60$Pless <- ppois(q = hapstats60$O.HOM, lambda = hapstats60$E.HOM, lower.tail = TRUE)
hapstats60$Pexcess <- ppois(q = hapstats60$O.HOM, lambda = hapstats60$E.HOM, lower.tail = FALSE)
hapstats60$P <- hapstats60$Pless / hapstats60$Pexcess

# Plotting
qq(hapstats60$Pless, main = "Homozygote Deficit Deviation of hap60.blocks")
qq(hapstats60$Pexcess, main = "Homozygote Excess Deviation of hap60.blocks")
manhattan(hapstats60, chr = "CHR", bp = "BP1", p = "P", snp = "BLOCK", logp = TRUE, main = "Manhattanplot of hap60.blocks", suggestiveline = -log10(1e-05), genomewideline = -log10(5e-08), annotateTop = TRUE)

# Subset data
low_annot60 <- subset(hapstats60, subset = hapstats60$Pless <= 1e-5)
high_annot60 <- subset(hapstats60, subset = hapstats60$Pexcess <= 1e-5)
p_annot60 <- subset(hapstats60, subset = hapstats60$P <= 1e-5)
phigh_annot60 <- subset(hapstats60, subset = hapstats60$P <= 0.001)

# Write data to file
write_delim(hapstats60, "hapstats60")
write_delim(low_annot60, "lowannot60")
write_delim(high_annot60, "highannot60")
write_delim(p_annot60, "pannot60")
write_delim(phigh_annot60, "phighannot60")

# Close graphics device
dev.off()


filename: ghap5.R

# Haplotype Statistics with GHap
# Loading packages
library(GHap)
library(tidyverse)
library(qqman)

# Set working directory
setwd("~/Masterproject/Collected/Out/")

# Load the .phase files into environment
phase <- ghap.loadphase(input.file = "Chr")

# Generate haplotype blocks
Chr.blocks.20kb <- ghap.blockgen(phase, windowsize = 100, slide = 20, unit = "kbp")

# Perform haplotyping
ghap.haplotyping(phase, Chr.blocks.20kb, batchsize = 100, ncores = 8, outfile = "Chr20")

# Load haplotype data
haplo20 <- ghap.loadhaplo(hapsamples.file = "Chr20.hapsamples", hapalleles.file = "Chr20.hapalleles", hapgenotypesb.file = "Chr20.hapgenotypesb")

# Calculate haplotype statistics
hapstats20 <- ghap.hapstats(haplo20, ncores = 8)

# Convert CHR column to numeric
hapstats20$CHR <- as.numeric(hapstats20$CHR)

# Calculate p-values and add to hapstats20 data frame
hapstats20$Pless <- ppois(q = hapstats20$O.HOM, lambda = hapstats20$E.HOM, lower.tail = TRUE)
hapstats20$Pexcess <- ppois(q = hapstats20$O.HOM, lambda = hapstats20$E.HOM, lower.tail = FALSE)
hapstats20$P <- hapstats20$Pless / hapstats20$Pexcess

# Generate QQ and Manhattan plots
qq(hapstats20$Pless, main = "Homozygote Deficit Deviation of hap20.blocks")
qq(hapstats20$Pexcess, main = "Homozygote Excess Deviation of hap20.blocks") 
manhattan(hapstats20, chr = "CHR", bp = "BP1", p = "P", snp = "BLOCK", logp = T, 
          main = "Manhattanplot of hap20.blocks", suggestiveline = -log10(1e-05), 
          genomewideline =  -log10(5e-08), annotateTop = T)

# Subset hapstats20 data frame based on p-values
low_annot20 <- subset(hapstats20, subset = hapstats20$Pless <= (1e-5)) 
high_annot20 <- subset(hapstats20, subset = hapstats20$Pexcess <= (1e-5))
p_annot20 <- subset(hapstats20, subset = hapstats20$P <= (1e-5))
phigh_annot20 <- subset(hapstats20, subset = hapstats20$P <= (0.001))

# Write data frames to file
write_delim(hapstats20, "hapstats20")
write_delim(low_annot20, "lowannot20")
write_delim(high_annot20, "highannot20")
write_delim(p_annot20, "pannot20")
write_delim(phigh_annot20, "phighannot20")

# Close graphics device
dev.off()


filename: ghap6.R

# Haplotype Statistics with GHap

# Loading packages
library(GHap)
library(tidyverse)
library(qqman)

# Setting working directory
setwd("~/Masterproject/Collected/Out/")

# Load the .phase files into environment
phase <- ghap.loadphase(input.file = "Chr")

# Generate haplotype blocks
Chr.blocks.5kb <- ghap.blockgen(phase, windowsize = 40, slide = 5, unit = "kbp")

# Perform haplotyping and save to file
ghap.haplotyping(phase, Chr.blocks.5kb, batchsize = 100, ncores = 8, outfile = "Chr5")
haplo5 <- ghap.loadhaplo(hapsamples.file = "Chr5.hapsamples", hapalleles.file = "Chr5.hapalleles", hapgenotypesb.file = "Chr5.hapgenotypesb")

# Calculate haplotype statistics
hapstats5 <- ghap.hapstats(haplo5, ncores = 8)
as.numeric(hapstats5$CHR) -> hapstats5$CHR
hapstats5$Pless <- ppois(q = hapstats5$O.HOM, lambda = hapstats5$E.HOM, lower.tail = TRUE)
hapstats5$Pexcess <- ppois(q = hapstats5$O.HOM, lambda = hapstats5$E.HOM, lower.tail = FALSE)
hapstats5$P <- hapstats5$Pless / hapstats5$Pexcess

# Generate QQ and Manhattan plots
qq(hapstats5$Pless, main = "Homozygote Deficit Deviation of hap5. blocks")
qq(hapstats5$Pexcess, main = "Homozygote Excess Deviation of hap5.blocks")
manhattan(hapstats5, chr = "CHR", bp = "BP1", p = "P", snp = "BLOCK", logp = T, main = "Manhattanplot of hap5.blocks", suggestiveline = -log10(1e-05), genomewideline = -log10(5e-08), annotateTop = T)

# Subset haplotype statistics
low_annot5 <- subset(hapstats5, subset = hapstats5$Pless <= (1e-5))
high_annot5 <- subset(hapstats5, subset = hapstats5$Pexcess <= (1e-5))
p_annot5 <- subset(hapstats5, subset = hapstats5$P <= (1e-5))
phigh_annot5 <- subset(hapstats5, subset = hapstats5$P <= (0.001))

# Save results to file
write_delim(hapstats5, "hapstats5")
write_delim(low_annot5, "lowannot5")
write_delim(high_annot5, "highannot5")
write_delim(p_annot5, "pannot5")
write_delim(phigh_annot5, "phighannot5")

# Close graphics device
dev.off()


filename: ghap7.R

# Loading packages
library(GHap)
library(tidyverse)
library(qqman)

# Set working directory
setwd("~/Masterproject/Collected/Out/")

# Load the .phase files into environment
phase <- ghap.loadphase(input.file = "Chr")

# Generate blocks
Chr.blocks.1kb <- ghap.blockgen(phase, windowsize = 10, slide = 1, unit = "kbp")

# Perform haplotyping and load haplotype data
ghap.haplotyping(phase, Chr.blocks.1kb, batchsize = 100, ncores = 8, outfile = "Chr1")
haplo1 <- ghap.loadhaplo(hapsamples.file = "Chr1.hapsamples", hapalleles.file = "Chr1.hapalleles", hapgenotypesb.file = "Chr1.hapgenotypesb")

# Calculate haplotype statistics
hapstats1 <- ghap.hapstats(haplo1, ncores = 8)
as.numeric(hapstats1$CHR) -> hapstats1$CHR
hapstats1$Pless <- ppois(q = hapstats1$O.HOM, lambda = hapstats1$E.HOM, lower.tail = TRUE)
hapstats1$Pexcess<-ppois(q = hapstats1$O.HOM, lambda = hapstats1$E.HOM, lower.tail = FALSE)
hapstats1$P <- hapstats1$Pless / hapstats1$Pexcess

# Create QQ plot and Manhattan plot
qq(hapstats1$Pless, main = "Homozygote Deficit Deviation of hap1. blocks")
qq(hapstats1$Pexcess, main = "Homozygote Excess Deviation of hap1.blocks")
manhattan(hapstats1, chr = "CHR", bp = "BP1", p = "P", snp = "BLOCK", logp = T, main = "Manhattanplot of hap1.blocks", suggestiveline = -log10(1e-05), genomewideline =  -log10(5e-08), annotateTop = T)

# Subset haplotype statistics by significance level and save to file
low_annot1 <- subset(hapstats1, subset = hapstats1$Pless <= (1e-5))
high_annot1 <- subset(hapstats1, subset = hapstats1$Pexcess <= (1e-5))
p_annot1 <- subset(hapstats1, subset = hapstats1$P <= (1e-5)) 
phigh_annot1 <- subset(hapstats1, subset = hapstats1$P <= (0.001)) 

# Write data frames to file
write_delim(hapstats1, "hapstats1")
write_delim(low_annot1, "lowannot1")
write_delim(high_annot1, "highannot1")
write_delim(p_annot1, "pannot1")
write_delim(phigh_annot1, "phighannot1")

# Close graphics device
dev.off()
